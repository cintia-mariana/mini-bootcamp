{"ast":null,"code":"import _classCallCheck from \"C:/Users/cintia.chazarreta/Documents/git/cintia/mini-bootcamp/Training/http-01-start/http-01-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/cintia.chazarreta/Documents/git/cintia/mini-bootcamp/Training/http-01-start/http-01-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { PostsService } from './posts.service'; //import { Post } from './post.model';\n\nvar AppComponent = /*#__PURE__*/function () {\n  function AppComponent(http, postsService) {\n    _classCallCheck(this, AppComponent);\n\n    this.http = http;\n    this.postsService = postsService;\n    this.loadedPosts = [];\n    this.isFetching = false;\n  }\n\n  _createClass(AppComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.fetchPost();\n    }\n  }, {\n    key: \"onCreatePost\",\n    value: function onCreatePost(postData) {\n      // Send Http request\n      this.postsService.createAndStorePost(postData.title, postData.content);\n    }\n  }, {\n    key: \"onFetchPosts\",\n    value: function onFetchPosts() {\n      // Send Http request\n      this.fetchPost();\n    }\n  }, {\n    key: \"onClearPosts\",\n    value: function onClearPosts() {// Send Http request\n    }\n  }, {\n    key: \"fetchPost\",\n    value: function fetchPost() {\n      var _this = this;\n\n      this.isFetching = true;\n      this.http.get('https://ng-complete-guide-da055-default-rtdb.firebaseio.com/posts.json').pipe(map(function (responseData) {\n        var postArray = [];\n\n        for (var key in responseData) {\n          if (responseData.hasOwnProperty(key)) {\n            postArray.push(Object.assign(Object.assign({}, responseData[key]), {\n              id: key\n            }));\n          }\n        }\n\n        return postArray;\n      })).subscribe(function (posts) {\n        _this.isFetching = false;\n        _this.loadedPosts = posts;\n      });\n    }\n  }]);\n\n  return AppComponent;\n}();\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n}), __metadata(\"design:paramtypes\", [HttpClient, typeof (_a = typeof PostsService !== \"undefined\" && PostsService) === \"function\" ? _a : Object])], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}